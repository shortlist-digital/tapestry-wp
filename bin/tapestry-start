#!/usr/bin/env node

const path = require('path')
const fs = require('fs')
const webpack = require('webpack')

const logger = require('../dist/logger')
const mergeConfigs = require('../dist/merge-config').default
const configDefault = require('../src/webpack/server.config')

const cwd = process.cwd()
const env = 'production'
const configCustomPath = path.resolve(cwd, 'webpack.config.js')

logger.info(`Booting Tapestryâ€¦ \n`)

// fetch user webpack config
let configCustom = null
if (fs.existsSync(configCustomPath)) {
  const module = require(configCustomPath)
  configCustom = module.default || module
}
// combine default/user webpack config
const webpackConfig = mergeConfigs({
  configCustom,
  configDefault,
  options: { cwd, env },
  webpack
})
// kick off webpack compilation
const compiler = webpack(webpackConfig)
compiler.run((err) => {
  // handle error
  if (err) logger.error(err)
  // server path relative to root
  const serverPath = path.resolve(cwd, '.tapestry/server.bundle.js')
  // require server and boot
  const server = require(serverPath).default
  server({ cwd, env, configCustom })
})
